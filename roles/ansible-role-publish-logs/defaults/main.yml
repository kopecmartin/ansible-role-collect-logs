---
# formally in tq common and tqe extras-common
local_working_dir: "{{ lookup('env', 'HOME') }}/.quickstart"
artcl_collect_dir: "{{ local_working_dir }}/collected_files"
working_dir: "/home/{{ undercloud_user }}"
undercloud_user: stack

# publishing related vars
artcl_publish: false
artcl_env: default
artcl_readme_file: "{{ artcl_collect_dir }}/README-logs.html"
artcl_txt_rename: false

# give up log upload after 30 minutes
artcl_publish_timeout: 1800
artcl_artifact_url: "file://{{ local_working_dir }}"
artcl_full_artifact_url: "{{ artcl_artifact_url }}/{{ lookup('env', 'BUILD_TAG') }}/"
artcl_use_rsync: false
artcl_rsync_use_daemon: false

artcl_use_swift: false
# clean up the logs after 31 days
artcl_swift_delete_after: 2678400
artcl_swift_container: logs
artcl_use_zuul_swift_upload: false
artcl_zuul_swift_upload_path: /usr/local/bin

# Doc generation specific vars
artcl_gen_docs: false
artcl_create_docs_payload:
  included_deployment_scripts: []
  included_static_docs: []
  table_of_contents: []
artcl_docs_source_dir: "{{ local_working_dir }}/usr/local/share/ansible/roles/collect-logs/docs/source"
artcl_docs_build_dir: "{{ artcl_collect_dir }}/docs/build"
artcl_verify_sphinx_build: false

# ara_graphite_server: graphite.tripleo.org
# if ara_enabled is false, no ara tasks will be executed
ara_enabled: true
ara_overcloud_db_path: "/var/lib/mistral/overcloud/ara_overcloud.sqlite"
ara_generate_html: true
ara_graphite_prefix: "tripleo.{{ lookup('env', 'STABLE_RELEASE')|default('master', true) }}.{{ lookup('env', 'TOCI_JOBTYPE') }}."
ara_only_successful_tasks: true
ara_tasks_map:
  "overcloud-deploy : Deploy the overcloud": overcloud.deploy.seconds
  "undercloud-deploy : Install the undercloud": undercloud.install.seconds
  "build-images : run the image build script (direct)": overcloud.images.seconds
  "overcloud-prep-images : Prepare the overcloud images for deploy": prepare_images.seconds
  "validate-simple : Validate the overcloud": overcloud.ping_test.seconds
  "validate-tempest : Execute tempest": overcloud.tempest.seconds

# InfluxDB module settings
influxdb_only_successful_tasks: true
influxdb_measurement: test
# influxdb_url:
influxdb_port: 8086
influxdb_user:
influxdb_password:
influxdb_dbname: testdb
influxdb_data_file_path: "{{ lookup('env', 'LOCAL_WORKING_DIR')|default('/tmp', true) }}/influxdb_data"
influxdb_create_data_file: true
